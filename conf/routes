# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET     /identification             controllers.Identification.main()
POST	/connexion					controllers.Identification.connexion()
GET		/deconnexion				controllers.Identification.deconnexion()
GET     /inscription                controllers.Inscription.main()
POST	/inscription				controllers.Inscription.inscrire()
GET     /retrouverMotDePasse        controllers.membre.MotDePasseOublie.main()
POST	/nouveauMotDePasse			controllers.membre.MotDePasseOublie.nouveauMotDePasse()
GET		/nouveauMotDePasse/:lien	controllers.membre.MotDePasseOublie.entrerNouveauMotDePasse(lien: String)
POST	/reinitialiseMotDePasse/:membre_id/:lien	controllers.membre.MotDePasseOublie.reinitialiseMotDePasse(membre_id: Integer, lien: String)
GET		/verification/:lien			functions.mail.VerifierMail.verifier(lien: String)

#routes pour l'utilisateur
GET     /menuUtilisateur            controllers.Application.menuUtilisateur()
GET     /informationsPersonnelles   controllers.membre.InformationsPersonnelles.main()
GET     /consulterDonnees           controllers.Application.consulterDonnees()
GET     /historique                 controllers.Application.historique()

#routes concernant la fiche de témoignage
GET     /ficheDeTemoignage          controllers.Application.ficheDeTemoignage()

#routes pour les experts
GET     /menuExpert                 controllers.expert.MenuExpert.main()
GET     /temoignagesAValider/:groupe_id  			    controllers.expert.ValiderObservations.temoignagesNonVus(groupe_id: Integer)
GET     /temoignagesAValider/enSuspens/:groupe_id	     controllers.expert.ValiderObservations.temoignagesEnSuspends(groupe_id: Integer)
POST    /temoignagesAValider/vu/:groupe_id/:observation_id	 			controllers.expert.ValiderObservations.marquerVu(observation_id: Long, groupe_id: Integer)
POST    /temoignagesAValider/valide/:groupe_id/:observation_id			controllers.expert.ValiderObservations.valide(observation_id: Long, groupe_id: Integer)
POST    /temoignagesAValider/editer/:groupe_id/:observation_id			controllers.expert.ValiderObservations.editer(observation_id: Long, groupe_id: Integer)
GET		/temoignagesAValider/edite/:groupe_id/:observation_id			controllers.expert.ValiderObservations.editeTemoignage(observation_id: Long, groupe_id: Integer)
GET     /temoignagesValides         controllers.Application.temoignagesValides()
GET		/gererstadesexe/:groupe_id	controllers.expert.GererStadeSexe.main(groupe_id: Integer)
POST	/nouveauStadeSexe/:groupe_id	controllers.expert.GererStadeSexe.ajouterStadePere(groupe_id: Integer)
POST	/nouveauStadeSexe/:groupe_id/:stade_sexe_pere_id	controllers.expert.GererStadeSexe.ajouterStadeFils(groupe_id: Integer, stade_sexe_pere_id: Integer)
POST	/supprimerStadeSexePere/:groupe_id/:stade_sexe_id	controllers.expert.GererStadeSexe.supprimerStadePere(groupe_id: Integer, stade_sexe_id: Integer)
POST	/supprimerStadeSexeFils/:groupe_id/:stade_sexe_id	controllers.expert.GererStadeSexe.supprimerStadeFils(groupe_id: Integer, stade_sexe_id: Integer)
GET		/gererdatescharnieres/:groupe_id					controllers.expert.GererDatesChanieres.main(groupe_id: Integer)
POST	/ajouterDateCharniere/:groupe_id					controllers.expert.GererDatesChanieres.ajouter(groupe_id: Integer)
POST	/supprimerDateCharniere/:groupe_id/:date_charniere_id			controllers.expert.GererDatesChanieres.supprimer(groupe_id: Integer, date_charniere_id: Integer)

#routes pour les admins
GET     /menuAdmin                   controllers.Application.menuAdmin()
GET     /assignerExperts             controllers.admin.AssignerExpert.main()
POST 	/assignerExpert/ajouter/:groupe_id	controllers.admin.AssignerExpert.ajouter(groupe_id: Integer)
POST 	/assignerExpert/changer/:groupe_id	controllers.admin.AssignerExpert.changer(groupe_id: Integer)
GET     /demandesInscription         controllers.Application.demandesInscription()
POST    /demandesInscription/valider/:membre_id    controllers.Application.valideInscription(membre_id: Integer)
GET		/gererGroupesEtSousGroupes			controllers.admin.GererGroupesEtSousGroupes.main()

#route pour gérer la base des insectes (admin)
GET     /gererBaseDeDonneesInsectes  	controllers.admin.GererBaseDeDonneesInsectes.main()
POST	/gererBaseDeDonneesInsectes	controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvEspece()
GET     /especesParSousFamille   	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParSousFamille()
GET     /especesParFamille   	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParFamille()
GET     /especesParSuperFamille   	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParSuperFamille()
GET     /especesParOrdre   	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParOrdre()

#routes pour les listes de membres*****************
GET     /listeMembres                controllers.Application.listeMembres(orderBy:String ?="membre_nom", sortDirection:String ?="asc")
GET     /listeMembresTemoinActif   controllers.Application.listeMembresTemoinActif(isTemoinActif:Boolean ?=true)
GET     /listeMembresAbonne   controllers.Application.listeMembresAbonne(isAbonne:Boolean ?=true)
GET     /listeMembresConfidentialite   controllers.Application.listeMembresConfidentialite(confidentialite:Integer ?=-1)
GET     /listeMembresDroits   controllers.Application.listeMembresDroits(droits:Integer ?=-1)
GET     /listeMembresInscrit   controllers.Application.listeMembresInscrit(isInscrit:Boolean ?=true)
GET     /listeMembresPrecis  controllers.Application.listeMembresPrecis(membre_nom: String)
#**********************************************
GET     /listeTemoignages            controllers.Application.listeTemoignages()

#routes ajax
GET		/listeDesMembres/:string_id						controllers.ajax.Listes.membres(string_id: String)
GET		/listeDesCommunes/:string_id					controllers.ajax.Listes.communes(string_id: String)
GET		/emailExisteOuPas/:mail							controllers.ajax.Verifications.mailExisteOuPas(mail: String)
POST	/ajax/groupe/renommer/:groupe_id				controllers.ajax.admin.AjaxGererGroupeEtSousGroupes.renommerGroupe(groupe_id: Integer)
POST	/ajax/sous_groupe/renommer/:sous_groupe_id		controllers.ajax.admin.AjaxGererGroupeEtSousGroupes.renommerSousGroupe(sous_groupe_id: Integer)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
